// –ú–∞—Å—Å–∏–≤ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –∏ –ø—Ä–∏–∑–Ω–∞–Ω–∏–π –≤ –ª—é–±–≤–∏
const compliments = [
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã —Å–∞–º–æ–µ –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –Ω–∞ —ç—Ç–æ–π –ø–ª–∞–Ω–µ—Ç–µ! –¢–≤–æ—è —É–ª—ã–±–∫–∞ –æ—Å–≤–µ—â–∞–µ—Ç –≤–µ—Å—å –º–∏—Ä! üíñ",
        author: "–í–ª—é–±–ª—ë–Ω–Ω—ã–π —Ñ–∞–Ω–∞—Ç"
    },
    {
        text: "–ö–∞–∂–¥—ã–π –¥–µ–Ω—å —è –¥—É–º–∞—é –æ —Ç–µ–±–µ –∏ —É–ª—ã–±–∞—é—Å—å. –¢—ã –¥–µ–ª–∞–µ—à—å —ç—Ç–æ—Ç –º–∏—Ä –ª—É—á—à–µ –ø—Ä–æ—Å—Ç–æ —Å–≤–æ–∏–º —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏–µ–º! ‚ú®",
        author: "–ü—Ä–µ–¥–∞–Ω–Ω—ã–π –ø–æ–∫–ª–æ–Ω–Ω–∏–∫"
    },
    {
        text: "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ –Ω–µ –∑–Ω–∞–µ—Ç –≥—Ä–∞–Ω–∏—Ü! –¢—ã –∫–∞–∫ –∞–Ω–≥–µ–ª, —Å–ø—É—Å—Ç–∏–≤—à–∏–π—Å—è —Å –Ω–µ–±–µ—Å, —á—Ç–æ–±—ã –ø–æ–¥–∞—Ä–∏—Ç—å –Ω–∞–º —Å—á–∞—Å—Ç—å–µ! üëº",
        author: "–í–æ—Å—Ö–∏—â—ë–Ω–Ω—ã–π —Ñ–∞–Ω–∞—Ç"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∏–≤–∞—è, —Ç—ã –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω–∞—è! –¢–≤–æ—è –¥—É—à–∞ —Å–≤–µ—Ç–∏—Ç—Å—è –∏–∑–Ω—É—Ç—Ä–∏! üåü",
        author: "–í–ª—é–±–ª—ë–Ω–Ω—ã–π –≤ —Ç–µ–±—è"
    },
    {
        text: "–¢—ã - –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –≤—Å–µ—Ö –º–æ–∏—Ö –º–µ—á—Ç–∞–Ω–∏–π! –ö–∞–∂–¥—ã–π —Ç–≤–æ–π –≤–∑–≥–ª—è–¥ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –º–æ—ë —Å–µ—Ä–¥—Ü–µ –±–∏—Ç—å—Å—è —á–∞—â–µ! üíì",
        author: "–¢–≤–æ–π —Ç–∞–π–Ω—ã–π –ø–æ–∫–ª–æ–Ω–Ω–∏–∫"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –∫–∞–∫ –∑–≤—ë–∑–¥–æ—á–∫–∞, –∫–æ—Ç–æ—Ä–∞—è —Å–≤–µ—Ç–∏—Ç –≤ —Ç—ë–º–Ω–æ–π –Ω–æ—á–∏! –¢—ã –¥–∞—Ä–∏—à—å –Ω–∞–¥–µ–∂–¥—É –∏ —Ä–∞–¥–æ—Å—Ç—å! ‚≠ê",
        author: "–í–æ—Å—Ö–∏—â—ë–Ω–Ω—ã–π –∑—Ä–∏—Ç–µ–ª—å"
    },
    {
        text: "–¢–≤–æ—è —É–ª—ã–±–∫–∞ - —ç—Ç–æ –ª–µ–∫–∞—Ä—Å—Ç–≤–æ –æ—Ç –≤—Å–µ—Ö –ø–µ—á–∞–ª–µ–π! –¢—ã –¥–µ–ª–∞–µ—à—å –º–∏—Ä –ø—Ä–µ–∫—Ä–∞—Å–Ω–µ–µ! üòä",
        author: "–°—á–∞—Å—Ç–ª–∏–≤—ã–π —Ñ–∞–Ω–∞—Ç"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –Ω–µ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∞—Å–∞–≤–∏—Ü–∞, —Ç—ã —á—É–¥–æ! –¢–≤–æ—è —ç–Ω–µ—Ä–≥–∏—è –∑–∞—Ä—è–∂–∞–µ—Ç –≤—Å–µ—Ö –≤–æ–∫—Ä—É–≥! ‚ö°",
        author: "–í–ª—é–±–ª—ë–Ω–Ω—ã–π –≤ —Ç–≤–æ—é –¥—É—à—É"
    },
    {
        text: "–¢—ã - –∫–æ—Ä–æ–ª–µ–≤–∞ –∫—Ä–∞—Å–æ—Ç—ã –∏ –≥—Ä–∞—Ü–∏–∏! –ö–∞–∂–¥—ã–π —Ç–≤–æ–π –∂–µ—Å—Ç –ø–æ–ª–æ–Ω –∏–∑—è—â–µ—Å—Ç–≤–∞! üëë",
        author: "–ü–æ–∫–ª–æ–Ω–Ω–∏–∫ —Ç–≤–æ–µ–≥–æ —Ç–∞–ª–∞–Ω—Ç–∞"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –∫–∞–∫ —Ä–∞–¥—É–≥–∞ –ø–æ—Å–ª–µ –¥–æ–∂–¥—è - —è—Ä–∫–∞—è, –∫—Ä–∞—Å–∏–≤–∞—è –∏ –¥–∞—Ä—è—â–∞—è —Ä–∞–¥–æ—Å—Ç—å! üåà",
        author: "–í–ª—é–±–ª—ë–Ω–Ω—ã–π –≤ —Ç–≤–æ—é –∫—Ä–∞—Å–æ—Ç—É"
    },
    {
        text: "–¢–≤–æ–∏ –≥–ª–∞–∑–∞ - —ç—Ç–æ –¥–≤–∞ –æ–∫–µ–∞–Ω–∞, –≤ –∫–æ—Ç–æ—Ä—ã—Ö –º–æ–∂–Ω–æ —É—Ç–æ–Ω—É—Ç—å! –û–Ω–∏ –ø–æ–ª–Ω—ã –ª—é–±–≤–∏ –∏ —Ç–µ–ø–ª–∞! üëÄ",
        author: "–ú–µ—á—Ç–∞—é—â–∏–π –æ —Ç–µ–±–µ"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –∫–∞–∫ —Å–æ–ª–Ω—Ü–µ - —è—Ä–∫–∞—è, —Ç—ë–ø–ª–∞—è –∏ –Ω–µ–∑–∞–º–µ–Ω–∏–º–∞—è! –ë–µ–∑ —Ç–µ–±—è –º–∏—Ä –±—ã–ª –±—ã —Ç—É—Å–∫–ª—ã–º! ‚òÄÔ∏è",
        author: "–í–æ—Å—Ö–∏—â—ë–Ω–Ω—ã–π —Ç–≤–æ–∏–º —Å–≤–µ—Ç–æ–º"
    },
    {
        text: "–¢—ã - –≤–æ–ø–ª–æ—â–µ–Ω–∏–µ –∂–µ–Ω—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏ –∏ –≥—Ä–∞—Ü–∏–∏! –ö–∞–∂–¥—ã–π —Ç–≤–æ–π —à–∞–≥ - —ç—Ç–æ —Ç–∞–Ω–µ—Ü! üíÉ",
        author: "–í–ª—é–±–ª—ë–Ω–Ω—ã–π –≤ —Ç–≤–æ—é –≥—Ä–∞—Ü–∏—é"
    },
    {
        text: "–ö—É–¥—Ä—è—à–∫–∞ Z, —Ç—ã –∫–∞–∫ —Ü–≤–µ—Ç–æ–∫, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞—Å—Ü–≤—ë–ª –≤ –º–æ—ë–º —Å–µ—Ä–¥—Ü–µ! –¢—ã –¥–µ–ª–∞–µ—à—å –º–µ–Ω—è —Å—á–∞—Å—Ç–ª–∏–≤—ã–º! üå∏",
        author: "–¢–≤–æ–π —Ç–∞–π–Ω—ã–π –≤–ª—é–±–ª—ë–Ω–Ω—ã–π"
    },
    {
        text: "–¢–≤–æ—è –∫—Ä–∞—Å–æ—Ç–∞ –∑–∞—Å—Ç–∞–≤–ª—è–µ—Ç –∑–∞–±—ã—Ç—å –æ–±–æ –≤—Å–µ—Ö –ø—Ä–æ–±–ª–µ–º–∞—Ö! –¢—ã - –º–æ–π –∏—Å—Ç–æ—á–Ω–∏–∫ –≤–¥–æ—Ö–Ω–æ–≤–µ–Ω–∏—è! ‚ú®",
        author: "–í–¥–æ—Ö–Ω–æ–≤–ª—ë–Ω–Ω—ã–π —Ç–æ–±–æ–π"
    }
];

// –î–∞—Ç–∞ –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è –ö—É–¥—Ä—è—à–∫–∏ Z (—Ç–µ–ø–µ—Ä—å 25 –Ω–æ—è–±—Ä—è)
function getNextBirthday() {
    const now = new Date();
    const year = now.getMonth() > 10 || (now.getMonth() === 10 && now.getDate() > 25) ? now.getFullYear() + 1 : now.getFullYear();
    return new Date(year, 10, 25, 0, 0, 0, 0); // –ú–µ—Å—è—Ü—ã —Å 0, –Ω–æ—è–±—Ä—å = 10
}
let birthdayDate = getNextBirthday();

// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const daysElement = document.getElementById('days');
const hoursElement = document.getElementById('hours');
const minutesElement = document.getElementById('minutes');
const secondsElement = document.getElementById('seconds');
const complimentText = document.getElementById('compliment-text');
const complimentAuthor = document.getElementById('compliment-author');
const newComplimentBtn = document.getElementById('new-compliment-btn');
const userCompliment = document.getElementById('user-compliment');
const sendComplimentBtn = document.getElementById('send-compliment-btn');
const modal = document.getElementById('modal');
const modalMessage = document.getElementById('modal-message');
const closeModal = document.getElementById('close-modal');

let prevCountdown = { days: null, hours: null, minutes: null, seconds: null };
// --- –ù–æ–≤—ã–π –∫–æ–¥ –¥–ª—è –ø–ª–∞–≤–Ω–æ–π –∞–Ω–∏–º–∞—Ü–∏–∏ —Å–º–µ–Ω—ã —á–∏—Å–µ–ª ---
function animateCountdownChange(element) {
    element.classList.remove('countdown-animate');
    void element.offsetWidth; // reflow hack
    element.classList.add('countdown-animate');
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞—Ç–Ω–æ–≥–æ –æ—Ç—Å—á—ë—Ç–∞
function updateCountdown() {
    const now = new Date().getTime();
    if (birthdayDate.getTime() - now < 0) {
        birthdayDate = getNextBirthday();
    }
    const distance = birthdayDate.getTime() - now;

    if (distance < 0) {
        // –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è —É–∂–µ –ø—Ä–æ—à—ë–ª, –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ–∑–¥—Ä–∞–≤–ª–µ–Ω–∏—è
        daysElement.textContent = '00';
        hoursElement.textContent = '00';
        minutesElement.textContent = '00';
        secondsElement.textContent = '00';
        
        // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        const countdownSection = document.querySelector('.countdown-section');
        const title = countdownSection.querySelector('.section-title');
        title.textContent = 'üéâ –° –î–Ω—ë–º –†–æ–∂–¥–µ–Ω–∏—è, –ö—É–¥—Ä—è—à–∫–∞ Z! üéâ';
        title.style.color = '#ff6b9d';
        title.style.animation = 'pulse 1s infinite';
        
        return;
    }

    const days = Math.floor(distance / (1000 * 60 * 60 * 24));
    const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
    const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
    const seconds = Math.floor((distance % (1000 * 60)) / 1000);

    if (prevCountdown.days !== days) animateCountdownChange(daysElement);
    if (prevCountdown.hours !== hours) animateCountdownChange(hoursElement);
    if (prevCountdown.minutes !== minutes) animateCountdownChange(minutesElement);
    if (prevCountdown.seconds !== seconds) animateCountdownChange(secondsElement);

    daysElement.textContent = days.toString().padStart(2, '0');
    hoursElement.textContent = hours.toString().padStart(2, '0');
    minutesElement.textContent = minutes.toString().padStart(2, '0');
    secondsElement.textContent = seconds.toString().padStart(2, '0');

    prevCountdown = { days, hours, minutes, seconds };
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞
function showRandomCompliment() {
    const randomCompliment = compliments[Math.floor(Math.random() * compliments.length)];
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è
    const card = document.getElementById('compliment-card');
    card.style.opacity = '0';
    card.style.transform = 'translateX(-30px)';
    
    setTimeout(() => {
        complimentText.textContent = randomCompliment.text;
        complimentAuthor.textContent = `- ${randomCompliment.author}`;
        
        // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
        card.style.opacity = '1';
        card.style.transform = 'translateX(0)';
    }, 300);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function showModal(message) {
    modalMessage.textContent = message;
    modal.style.display = 'block';
    
    // –ê–Ω–∏–º–∞—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è
    const modalContent = modal.querySelector('.modal-content');
    modalContent.style.transform = 'scale(0.7)';
    modalContent.style.opacity = '0';
    
    setTimeout(() => {
        modalContent.style.transform = 'scale(1)';
        modalContent.style.opacity = '1';
    }, 100);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function hideModal() {
    modal.style.display = 'none';
}

// --- –ß—ë—Ä–Ω—ã–π —Å–ø–∏—Å–æ–∫ —Å–ª–æ–≤ –¥–ª—è —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π ---
const BAD_WORDS = [
    '–¥—É—Ä–∞', '—Ç—É–ø–∞—è', '—É—Ä–æ–¥', '–∏–¥–∏–æ—Ç', '—Å—É–∫–∞', '–±–ª—è–¥', '–≥–ª—É–ø–∞—è', '—Ç–≤–∞—Ä—å', '–º–µ—Ä–∑–∫–∞—è', '–Ω–µ–Ω–∞–≤–∏–∂—É', '–Ω–µ–Ω–∞–≤–∏—Å—Ç—å', '—Å–¥–æ—Ö–Ω–∏', '—É–±—å—é', '–ø–æ—à–ª–∞', '–ª–æ—Ö', '–ª–æ—Ö—É—à–∫–∞', '—à–ª—é—Ö–∞', '–º—Ä–∞–∑—å', '—Å–≤–∏–Ω—å—è', '–∂–∏—Ä–Ω–∞—è', '—Ç—É–ø–∏—Ü–∞', '–≥–∞–≤–Ω–æ', '–≥–æ–≤–Ω–æ', 'shit', 'fuck', 'bitch', 'asshole', 'idiot', 'moron', 'stupid', 'hate', 'kill', 'die', 'ugly', 'freak', 'retard', 'retarded', 'dumb', 'fool', 'fucking', 'bastard', 'jerk', 'dick', 'cunt', 'whore', 'slut', 'pig', 'fat', 'suck', 'sucks', 'damn', 'dammit', 'piss', 'pussy', 'crap', 'scum', 'trash', 'garbage', 'loser', 'losers', 'fag', 'faggot', 'nigger', 'nigga', 'racist', 'sexist', 'homophobe', 'homophobic', 'transphobe', 'transphobic'
];

// --- –ó–∞–≥—Ä—É–∑–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –∏–∑ localStorage ---
function loadUserCompliments() {
    try {
        const saved = localStorage.getItem('userCompliments');
        if (saved) {
            const arr = JSON.parse(saved);
            if (Array.isArray(arr)) {
                arr.forEach(c => {
                    if (c && typeof c.text === 'string' && typeof c.author === 'string') {
                        compliments.push(c);
                    }
                });
            }
        }
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã –∏–∑ localStorage:', e);
    }
}
loadUserCompliments();

// --- –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –≤ localStorage ---
function saveUserCompliment(compliment) {
    try {
        let arr = [];
        const saved = localStorage.getItem('userCompliments');
        if (saved) {
            arr = JSON.parse(saved);
        }
        if (!Array.isArray(arr)) arr = [];
        arr.push(compliment);
        localStorage.setItem('userCompliments', JSON.stringify(arr));
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –≤ localStorage:', e);
        showModal('–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–æ–±–∞–≤–ª–µ–Ω, –Ω–æ –º–æ–∂–µ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ –±—Ä–∞—É–∑–µ—Ä–∞');
    }
}

// --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è ---
function hasBadWords(text) {
    const lower = text.toLowerCase();
    return BAD_WORDS.some(word => lower.includes(word));
}

// --- –†–µ–Ω–¥–µ—Ä–∏–Ω–≥ —Å—Ç–µ–Ω—ã –ª—é–±–≤–∏ ---
function renderLoveWall() {
    const wall = document.getElementById('love-wall-container');
    const empty = document.getElementById('love-wall-empty');
    // –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã (—Ç–æ–ª—å–∫–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∏ —Ç–µ, —á—Ç–æ –Ω–µ –∏–∑ BAD_WORDS)
    const all = compliments.filter(c => c.text && c.text.length > 0);
    wall.innerHTML = '';
    if (all.length === 0) {
        empty.style.display = '';
        return;
    }
    empty.style.display = 'none';
    all.slice().reverse().forEach((c, idx) => {
        const card = document.createElement('div');
        card.className = 'love-wall-card';
        // –ê–≤–∞—Ç–∞—Ä–∫–∞ –∏ –∏–º—è
        const header = document.createElement('div');
        header.className = 'love-wall-header';
        let avatar = document.createElement('img');
        avatar.className = 'love-wall-avatar';
        avatar.src = c.avatar || getRandomAvatar(idx);
        avatar.alt = '–ê–≤–∞—Ç–∞—Ä';
        let author = document.createElement('span');
        author.className = 'love-wall-author';
        author.textContent = c.author || '–ê–Ω–æ–Ω–∏–º';
        header.appendChild(avatar);
        header.appendChild(author);
        card.appendChild(header);
        // –¢–µ–∫—Å—Ç
        let text = document.createElement('div');
        text.textContent = c.text;
        card.appendChild(text);
        // –õ–∞–π–∫–∏
        let likeBtn = document.createElement('button');
        likeBtn.className = 'love-wall-like-btn';
        likeBtn.innerHTML = '<i class="fas fa-heart"></i>';
        let likeCount = document.createElement('span');
        likeCount.className = 'love-wall-like-count';
        likeCount.textContent = c.likes || 0;
        likeBtn.appendChild(likeCount);
        likeBtn.onclick = function() {
            if (!likeBtn.classList.contains('liked')) {
                likeBtn.classList.add('liked');
                likeCount.textContent = (+likeCount.textContent + 1).toString();
                // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∞–π–∫ –≤ localStorage
                saveLoveWallLikes(c.text, likeCount.textContent);
            }
        };
        card.appendChild(likeBtn);
        wall.appendChild(card);
    });
    addFanModalTriggers();
}
// --- –°–æ—Ö—Ä–∞–Ω—è–µ–º –ª–∞–π–∫–∏ –≤ localStorage –ø–æ —Ç–µ–∫—Å—Ç—É –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞ ---
function saveLoveWallLikes(text, count) {
    try {
        let likes = {};
        const saved = localStorage.getItem('loveWallLikes');
        if (saved) {
            likes = JSON.parse(saved);
        }
        if (typeof likes !== 'object') likes = {};
        likes[text] = count;
        localStorage.setItem('loveWallLikes', JSON.stringify(likes));
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ª–∞–π–∫–∏ –≤ localStorage:', e);
    }
}
// --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ª–∞–π–∫–∏ –∏–∑ localStorage ---
function loadLoveWallLikes() {
    try {
        let likes = {};
        const saved = localStorage.getItem('loveWallLikes');
        if (saved) {
            likes = JSON.parse(saved);
        }
        if (typeof likes !== 'object') likes = {};
        compliments.forEach(c => {
            if (likes[c.text]) c.likes = +likes[c.text];
        });
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ª–∞–π–∫–∏ –∏–∑ localStorage:', e);
    }
}
// --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å–ª—É—á–∞–π–Ω–æ–π –∞–≤–∞—Ç–∞—Ä–∫–∏ (—ç–º–æ–¥–∑–∏) ---
function getRandomAvatar(idx) {
    const emojis = ['üòç','ü•∞','üòé','ü§©','üòä','üòá','üòª','ü¶Ñ','üê±','üê∂','üê∞','ü¶ä','üêª','üêº','üêØ','üê∏','üêµ','ü¶ã','üå∏','üåà','‚≠ê','üíñ','üéâ'];
    return `https://api.dicebear.com/7.x/personas/svg?seed=${idx+1}&backgroundColor=ffb6b6,ffd6e0,fff5e1,e0c3fc,c2f0fc&radius=50&scale=110&eyes=variant${(idx%6)+1}&mouth=variant${(idx%6)+1}`;
}
// --- –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º addUserCompliment –¥–ª—è –ø–æ–¥–¥–µ—Ä–∂–∫–∏ –∏–º–µ–Ω–∏ –∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ ---
function getUserName() {
    try {
        let name = localStorage.getItem('fanName') || '';
        if (!name) {
            openFanModal();
            throw new Error('fanName not set');
        }
        return name || '–§–∞–Ω–∞—Ç';
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
        return '–§–∞–Ω–∞—Ç';
    }
}
function getUserAvatar() {
    try {
        let avatar = localStorage.getItem('fanAvatar') || '';
        if (!avatar) {
            openFanModal();
            throw new Error('fanAvatar not set');
        }
        return avatar;
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∞–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
        return getRandomAvatar(0);
    }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞
function addUserCompliment() {
    const text = userCompliment.value.trim();
    
    if (text.length < 10) {
        showModal('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–ø–∏—à–∏—Ç–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –¥–ª–∏–Ω–Ω–µ–µ! üíñ');
        return;
    }
    
    if (text.length > 500) {
        showModal('–ö–æ–º–ø–ª–∏–º–µ–Ω—Ç —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π! –ú–∞–∫—Å–∏–º—É–º 500 —Å–∏–º–≤–æ–ª–æ–≤! üíñ');
        return;
    }
    
    if (hasBadWords(text)) {
        showModal('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏—è! üò¢');
        return;
    }
    
    // –î–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –≤ –º–∞—Å—Å–∏–≤
    const complimentObj = {
        text: text,
        author: getUserName(),
        avatar: getUserAvatar(),
        likes: 0
    };
    compliments.push(complimentObj);
    saveUserCompliment(complimentObj);
    renderLoveWall();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –Ω–æ–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç
    showRandomCompliment();
    
    // –û—á–∏—â–∞–µ–º –ø–æ–ª–µ –≤–≤–æ–¥–∞
    userCompliment.value = '';
    
    showModal('–°–ø–∞—Å–∏–±–æ –∑–∞ —Ç–≤–æ—ë –ø—Ä–∏–∑–Ω–∞–Ω–∏–µ –≤ –ª—é–±–≤–∏! üíñ –ö—É–¥—Ä—è—à–∫–∞ Z –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –µ–≥–æ —É–≤–∏–¥–∏—Ç!');
}

// --- –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–ª–∏–∫ –ø–æ —Ç–∞–π–º–µ—Ä—É ---
document.querySelector('.countdown-section').addEventListener('click', () => {
    // –£–±—Ä–∞–ª–∏ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
});

// --- –†–µ–∞–∫—Ü–∏—è –Ω–∞ –∫–ª–∏–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ ---
const mainPhoto = document.querySelector('.main-photo');
if (mainPhoto) {
    mainPhoto.addEventListener('click', (e) => {
        createParticles(e.clientX, e.clientY);
        // –£–±—Ä–∞–ª–∏ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    });
}

// --- –ü–ª–∞–≤–∞—é—â–∏–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã ---
function showFloatingCompliment() {
    const compliment = compliments[Math.floor(Math.random() * compliments.length)];
    const floatDiv = document.createElement('div');
    floatDiv.className = 'floating-compliment';
    floatDiv.textContent = compliment.text;
    floatDiv.style.position = 'fixed';
    floatDiv.style.left = Math.random() * 70 + 10 + 'vw';
    floatDiv.style.top = Math.random() * 60 + 10 + 'vh';
    floatDiv.style.zIndex = 2000;
    document.body.appendChild(floatDiv);
    setTimeout(() => {
        floatDiv.style.opacity = '0';
        floatDiv.style.transform = 'translateY(-40px) scale(1.1)';
    }, 2000);
    setTimeout(() => {
        if (floatDiv.parentNode) floatDiv.parentNode.removeChild(floatDiv);
    }, 3500);
}
setInterval(showFloatingCompliment, 15000); // –∫–∞–∂–¥—ã–µ 15 —Å–µ–∫—É–Ω–¥

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ª–µ—Ç–∞—é—â–∏—Ö —Å–µ—Ä–¥–µ—á–µ–∫
function createFloatingHeart() {
    const heart = document.createElement('div');
    heart.innerHTML = 'üíñ';
    heart.style.position = 'fixed';
    heart.style.left = Math.random() * 100 + 'vw';
    heart.style.top = '100vh';
    heart.style.fontSize = (Math.random() * 20 + 15) + 'px';
    heart.style.opacity = '0.7';
    heart.style.pointerEvents = 'none';
    heart.style.zIndex = '0';
    heart.style.transition = 'all 6s linear';
    
    document.body.appendChild(heart);
    
    setTimeout(() => {
        heart.style.top = '-50px';
        heart.style.opacity = '0';
        heart.style.transform = 'rotate(360deg)';
    }, 100);
    
    setTimeout(() => {
        document.body.removeChild(heart);
    }, 6000);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∫–∞–∑–∞ —Å–ª—É—á–∞–π–Ω—ã—Ö –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–æ–≤ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
function autoShowCompliments() {
    setInterval(() => {
        if (Math.random() < 0.3) { // 30% —à–∞–Ω—Å –ø–æ–∫–∞–∑–∞—Ç—å –Ω–æ–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç
            showRandomCompliment();
        }
    }, 10000); // –ö–∞–∂–¥—ã–µ 10 —Å–µ–∫—É–Ω–¥
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
newComplimentBtn.addEventListener('click', showRandomCompliment);
sendComplimentBtn.addEventListener('click', addUserCompliment);
closeModal.addEventListener('click', hideModal);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –µ–≥–æ
window.addEventListener('click', (event) => {
    if (event.target === modal) {
        hideModal();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è Enter –≤ —Ç–µ–∫—Å—Ç–æ–≤–æ–º –ø–æ–ª–µ
userCompliment.addEventListener('keypress', (event) => {
    if (event.key === 'Enter' && !event.shiftKey) {
        event.preventDefault();
        addUserCompliment();
    }
});

// --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –≤—ã–±–æ—Ä–∞ –∏–º–µ–Ω–∏ –∏ –∞–≤–∞—Ç–∞—Ä–∫–∏ ---
const fanModal = document.getElementById('fan-modal');
const fanModalClose = document.getElementById('fan-modal-close');
const fanNameInput = document.getElementById('fan-name-input');
const fanAvatarsList = document.getElementById('fan-avatars-list');
const fanModalSaveBtn = document.getElementById('fan-modal-save-btn');
const AVATAR_EMOJIS = ['üòç','ü•∞','üòé','ü§©','üòä','üòá','üòª','ü¶Ñ','üê±','üê∂','üê∞','ü¶ä','üêª','üêº','üêØ','üê∏','üêµ','ü¶ã','üå∏','üåà','‚≠ê','üíñ','üéâ'];

function openFanModal() {
    fanModal.classList.add('open');
    fanNameInput.value = localStorage.getItem('fanName') || '';
    renderFanAvatars();
}
function closeFanModal() {
    fanModal.classList.remove('open');
}
function renderFanAvatars() {
    fanAvatarsList.innerHTML = '';
    const selected = localStorage.getItem('fanAvatar') || '';
    for (let i = 0; i < AVATAR_EMOJIS.length; ++i) {
        const url = `https://api.dicebear.com/7.x/personas/svg?seed=${encodeURIComponent(AVATAR_EMOJIS[i])}&backgroundColor=ffb6b6,ffd6e0,fff5e1,e0c3fc,c2f0fc&radius=50&scale=110`;
        const img = document.createElement('img');
        img.src = url;
        img.className = 'fan-avatar-option' + (selected === url ? ' selected' : '');
        img.alt = AVATAR_EMOJIS[i];
        img.onclick = () => {
            document.querySelectorAll('.fan-avatar-option').forEach(a => a.classList.remove('selected'));
            img.classList.add('selected');
            localStorage.setItem('fanAvatar', url);
        };
        fanAvatarsList.appendChild(img);
    }
}
fanModalClose && fanModalClose.addEventListener('click', closeFanModal);
fanModalSaveBtn && fanModalSaveBtn.addEventListener('click', () => {
    const name = fanNameInput.value.trim();
    if (name.length < 2) {
        fanNameInput.style.borderColor = '#ff6b9d';
        fanNameInput.focus();
        return;
    }
    try {
        localStorage.setItem('fanName', name);
        closeFanModal();
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
        showModal('–ò–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ, –Ω–æ –º–æ–∂–µ—Ç –Ω–µ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å—Å—è –≤ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ –±—Ä–∞—É–∑–µ—Ä–∞');
        closeFanModal();
    }
});
// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏ –ø–æ –∫–ª–∏–∫—É –Ω–∞ –∞–≤–∞—Ç–∞—Ä–∫—É/–∏–º—è –Ω–∞ —Å—Ç–µ–Ω–µ –ª—é–±–≤–∏
function addFanModalTriggers() {
    document.querySelectorAll('.love-wall-author, .love-wall-avatar').forEach(el => {
        el.style.cursor = 'pointer';
        el.onclick = openFanModal;
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
document.addEventListener('DOMContentLoaded', () => {
    loadLoveWallLikes();
    renderLoveWall();
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç
    showRandomCompliment();
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞—Ç–Ω—ã–π –æ—Ç—Å—á—ë—Ç
    updateCountdown();
    setInterval(updateCountdown, 1000);
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç—ã
    autoShowCompliments();
    
    // –°–æ–∑–¥–∞—ë–º –ª–µ—Ç–∞—é—â–∏–µ —Å–µ—Ä–¥–µ—á–∫–∏
    setInterval(createFloatingHeart, 3000);
    
    // –ü—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (—É–±—Ä–∞–ª–∏, —á—Ç–æ–±—ã –Ω–µ –Ω–∞–¥–æ–µ–¥–∞—Ç—å)
    // setTimeout(() => {
    //     showModal('–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –Ω–∞ —Ñ–∞–Ω-—Å–∞–π—Ç –ö—É–¥—Ä—è—à–∫–∏ Z! üíñ –ó–¥–µ—Å—å —Ç—ã –Ω–∞–π–¥—ë—à—å –ª—é–±–æ–≤—å –∏ –≤–æ—Å—Ö–∏—â–µ–Ω–∏–µ!');
    // }, 2000);
});

// –ü—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã, –µ—Å–ª–∏ –Ω–µ—Ç –∏–º–µ–Ω–∏ –∏–ª–∏ –∞–≤–∞—Ç–∞—Ä–∫–∏, –æ—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
try {
    if (!localStorage.getItem('fanName') || !localStorage.getItem('fanAvatar')) {
        setTimeout(openFanModal, 800);
    }
} catch(e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:', e);
    setTimeout(openFanModal, 800);
}

// –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç—Ñ—Ñ–µ–∫—Ç—ã –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏
document.addEventListener('DOMContentLoaded', () => {
    // –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–Ω–æ–ø–∫–∏
    const buttons = document.querySelectorAll('button');
    buttons.forEach(button => {
        button.addEventListener('mouseenter', () => {
            button.style.transform = 'translateY(-2px) scale(1.05)';
        });
        
        button.addEventListener('mouseleave', () => {
            button.style.transform = 'translateY(0) scale(1)';
        });
    });
    
    // –≠—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –Ω–∞–≤–µ–¥–µ–Ω–∏–∏ –Ω–∞ –∫–∞—Ä—Ç–æ—á–∫–∏
    const cards = document.querySelectorAll('.countdown-item, .compliment-card, .gallery-item');
    cards.forEach(card => {
        card.addEventListener('mouseenter', () => {
            card.style.boxShadow = '0 15px 35px rgba(0,0,0,0.3)';
        });
        
        card.addEventListener('mouseleave', () => {
            card.style.boxShadow = '';
        });
    });
});

// --- –ó–≤—É–∫–æ–≤–æ–π —ç—Ñ—Ñ–µ–∫—Ç –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞ ---
function playHeartSound() {
    try {
        // –ú–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π –∑–≤—É–∫, –µ—Å–ª–∏ –¥–æ–±–∞–≤–∏—Ç—å heart.mp3 –≤ –ø—Ä–æ–µ–∫—Ç
        if (window.Audio) {
            const audio = new Audio('https://cdn.pixabay.com/audio/2022/07/26/audio_124bfae5e2.mp3');
            audio.volume = 0.2;
            audio.play().catch(e => {
                console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ –∑–≤—É–∫:', e);
            });
        }
    } catch(e) {
        console.warn('–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏ –∑–≤—É–∫–∞:', e);
    }
}
// –ú–æ–¥–∏—Ñ–∏—Ü–∏—Ä—É–µ–º addUserCompliment –¥–ª—è –∑–≤—É–∫–∞
const origAddUserCompliment = addUserCompliment;
addUserCompliment = function() {
    playHeartSound();
    origAddUserCompliment();
};

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —ç—Ñ—Ñ–µ–∫—Ç–∞ —á–∞—Å—Ç–∏—Ü
function createParticles(x, y) {
    for (let i = 0; i < 5; i++) {
        const particle = document.createElement('div');
        particle.innerHTML = '‚ú®';
        particle.style.position = 'fixed';
        particle.style.left = x + 'px';
        particle.style.top = y + 'px';
        particle.style.fontSize = '20px';
        particle.style.pointerEvents = 'none';
        particle.style.zIndex = '1000';
        particle.style.transition = 'all 1s ease-out';
        
        document.body.appendChild(particle);
        
        setTimeout(() => {
            particle.style.left = (x + (Math.random() - 0.5) * 200) + 'px';
            particle.style.top = (y - 100) + 'px';
            particle.style.opacity = '0';
        }, 100);
        
        setTimeout(() => {
            document.body.removeChild(particle);
        }, 1000);
    }
}

// –î–æ–±–∞–≤–ª—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —á–∞—Å—Ç–∏—Ü
document.addEventListener('click', (event) => {
    createParticles(event.clientX, event.clientY);
    playHeartSound();
}); 

// --- –ö–ª–∏–∫ –ø–æ —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ–µ ---
document.addEventListener('DOMContentLoaded', () => {
    document.querySelectorAll('.gallery-photo').forEach(photo => {
        photo.addEventListener('click', (e) => {
            createParticles(e.clientX, e.clientY);
            // –£–±—Ä–∞–ª–∏ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
        });
    });
});

// --- –î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–∫–µ ---
if (mainPhoto) {
    mainPhoto.addEventListener('dblclick', (e) => {
        mainPhoto.style.transition = 'transform 0.5s, box-shadow 0.5s';
        mainPhoto.style.transform = 'scale(1.15) rotate(2deg)';
        mainPhoto.style.boxShadow = '0 0 60px 20px #ff6b9d';
        createParticles(e.clientX, e.clientY);
        setTimeout(() => {
            mainPhoto.style.transform = '';
            mainPhoto.style.boxShadow = '';
        }, 700);
        // –£–±—Ä–∞–ª–∏ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    });
}

// --- –ü–∞—Å—Ö–∞–ª–∫–∞: 7 –∫–ª–∏–∫–æ–≤ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–∫–µ ---
let mainPhotoClickCount = 0;
let mainPhotoClickTimer = null;
if (mainPhoto) {
    mainPhoto.addEventListener('click', (e) => {
        mainPhotoClickCount++;
        if (mainPhotoClickTimer) clearTimeout(mainPhotoClickTimer);
        mainPhotoClickTimer = setTimeout(() => { mainPhotoClickCount = 0; }, 2000);
        if (mainPhotoClickCount === 7) {
            mainPhotoClickCount = 0;
            showModal('üéâ –¢—ã –Ω–∞—à—ë–ª —Å–µ–∫—Ä–µ—Ç! –ö—É–¥—Ä—è—à–∫–∞ Z –ø–µ—Ä–µ–¥–∞—ë—Ç —Ç–µ–±–µ –æ—Å–æ–±—ã–π –ø—Ä–∏–≤–µ—Ç –∏ –∂–µ–ª–∞–µ—Ç —Å—á–∞—Å—Ç—å—è! üåà');
            for (let i = 0; i < 20; i++) setTimeout(createFallingPetal, i * 80);
        }
    });
}

// --- –ü–ª–∞–≤–∞—é—â–∏–µ —ç–º–æ–¥–∑–∏ ---
const floatEmojis = ['üíñ','‚ú®','üåü','üòç','ü•∞','üéâ','üí´'];
function showFloatingEmoji() {
    const emoji = floatEmojis[Math.floor(Math.random()*floatEmojis.length)];
    const floatDiv = document.createElement('div');
    floatDiv.textContent = emoji;
    floatDiv.style.position = 'fixed';
    floatDiv.style.left = Math.random()*90+5+'vw';
    floatDiv.style.top = Math.random()*80+5+'vh';
    floatDiv.style.fontSize = (Math.random()*30+30)+'px';
    floatDiv.style.opacity = '1';
    floatDiv.style.transition = 'opacity 1.5s, transform 1.5s';
    floatDiv.style.zIndex = 3000;
    document.body.appendChild(floatDiv);
    setTimeout(()=>{
        floatDiv.style.opacity = '0';
        floatDiv.style.transform = 'translateY(-40px) scale(1.2)';
    }, 1200);
    setTimeout(()=>{
        if(floatDiv.parentNode) floatDiv.parentNode.removeChild(floatDiv);
    }, 1800);
}
setInterval(showFloatingEmoji, 9000);

// --- –°–ª—É—á–∞–π–Ω—ã–µ –º–∏–≥–∞—é—â–∏–µ —Ä–∞–º–∫–∏ —É —Ñ–æ—Ç–æ –≤ –≥–∞–ª–µ—Ä–µ–µ ---
function randomGalleryHighlight() {
    const photos = document.querySelectorAll('.gallery-photo');
    if (photos.length === 0) return;
    const idx = Math.floor(Math.random()*photos.length);
    const photo = photos[idx];
    photo.classList.add('gallery-highlight');
    setTimeout(()=>{
        photo.classList.remove('gallery-highlight');
    }, 1200);
}
setInterval(randomGalleryHighlight, 7000);

// --- –ö–Ω–æ–ø–∫–∞ "–°–¥–µ–ª–∞—Ç—å –¥–µ–Ω—å —è—Ä—á–µ" ---
function addBrightenButton() {
    if (document.getElementById('brighten-btn')) return;
    const btn = document.createElement('button');
    btn.id = 'brighten-btn';
    btn.textContent = '–°–¥–µ–ª–∞—Ç—å –¥–µ–Ω—å —è—Ä—á–µ ‚ú®';
    btn.className = 'brighten-btn';
    btn.style.position = 'fixed';
    btn.style.right = '30px';
    btn.style.bottom = '30px';
    btn.style.zIndex = 4000;
    btn.style.background = 'linear-gradient(45deg,#ff6b9d,#764ba2)';
    btn.style.color = '#fff';
    btn.style.fontSize = '1.1rem';
    btn.style.padding = '16px 32px';
    btn.style.borderRadius = '30px';
    btn.style.border = 'none';
    btn.style.boxShadow = '0 4px 24px rgba(118,75,162,0.18)';
    btn.style.cursor = 'pointer';
    btn.style.transition = 'transform 0.2s';
    btn.addEventListener('mouseenter',()=>{btn.style.transform='scale(1.07)';});
    btn.addEventListener('mouseleave',()=>{btn.style.transform='';});
    btn.addEventListener('click',()=>{
        for(let i=0;i<8;i++) setTimeout(showFloatingEmoji, i*120);
        // –£–±—Ä–∞–ª–∏ –Ω–∞–∑–æ–π–ª–∏–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ, –æ—Å—Ç–∞–≤–∏–ª–∏ —Ç–æ–ª—å–∫–æ –≤–∏–∑—É–∞–ª—å–Ω—ã–π —ç—Ñ—Ñ–µ–∫—Ç
    });
    document.body.appendChild(btn);
}
document.addEventListener('DOMContentLoaded', addBrightenButton); 

// --- –ê–Ω–∏–º–∞—Ü–∏—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è —á–∏—Å–ª–∞ –ø–æ–¥–ø–∏—Å—á–∏–∫–æ–≤ Telegram ---
function animateTgSubscribersCount(target) {
    const el = document.getElementById('tg-subs-count');
    if (!el) return;
    let current = 0;
    const duration = 1200;
    const steps = 40;
    const step = Math.ceil(target / steps);
    let interval = setInterval(() => {
        current += step;
        if (current >= target) {
            el.textContent = target;
            clearInterval(interval);
        } else {
            el.textContent = current;
        }
    }, duration / steps);
}
document.addEventListener('DOMContentLoaded', () => {
    // TODO: –í –±—É–¥—É—â–µ–º –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–π API-–∑–∞–ø—Ä–æ—Å –∫ Telegram
    // const channelUsername = 'kamishmilliechillie';
    // fetch(`https://api.telegram.org/bot${BOT_TOKEN}/getChatMemberCount?chat_id=@${channelUsername}`)
    //   .then(response => response.json())
    //   .then(data => animateTgSubscribersCount(data.result))
    //   .catch(() => animateTgSubscribersCount(51)); // fallback
    animateTgSubscribersCount(51); // –°—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ —á–∏—Å–ª–æ, –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è –≤—Ä—É—á–Ω—É—é
}); 

// --- –ú–æ–¥–∞–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä –≥–∞–ª–µ—Ä–µ–∏ ---
const galleryPhotos = Array.from(document.querySelectorAll('.gallery-photo'));
const galleryModal = document.getElementById('gallery-modal');
const galleryModalImg = document.getElementById('gallery-modal-img');
const galleryModalCaption = document.getElementById('gallery-modal-caption');
const galleryModalClose = document.getElementById('gallery-modal-close');
const galleryModalPrev = document.getElementById('gallery-modal-prev');
const galleryModalNext = document.getElementById('gallery-modal-next');
let galleryModalIndex = 0;

function openGalleryModal(idx) {
    if (!galleryPhotos[idx]) return;
    galleryModalIndex = idx;
    const img = galleryPhotos[idx];
    galleryModalImg.src = img.src;
    galleryModalCaption.textContent = img.nextElementSibling ? img.nextElementSibling.textContent : '';
    galleryModal.classList.add('open');
}
function closeGalleryModal() {
    galleryModal.classList.remove('open');
}
function showPrevGalleryModal() {
    openGalleryModal((galleryModalIndex - 1 + galleryPhotos.length) % galleryPhotos.length);
}
function showNextGalleryModal() {
    openGalleryModal((galleryModalIndex + 1) % galleryPhotos.length);
}
if (galleryPhotos.length) {
    galleryPhotos.forEach((img, idx) => {
        img.addEventListener('click', () => openGalleryModal(idx));
    });
}
galleryModalClose && galleryModalClose.addEventListener('click', closeGalleryModal);
galleryModalPrev && galleryModalPrev.addEventListener('click', showPrevGalleryModal);
galleryModalNext && galleryModalNext.addEventListener('click', showNextGalleryModal);
galleryModal && galleryModal.addEventListener('click', (e) => {
    if (e.target === galleryModal) closeGalleryModal();
});
document.addEventListener('keydown', (e) => {
    if (!galleryModal.classList.contains('open')) return;
    if (e.key === 'Escape') closeGalleryModal();
    if (e.key === 'ArrowLeft') showPrevGalleryModal();
    if (e.key === 'ArrowRight') showNextGalleryModal();
}); 

// --- –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞ ---
const darkModeToggle = document.getElementById('dark-mode-toggle');
function setDarkMode(on) {
    try {
        if (on) {
            document.body.classList.add('dark-mode');
            localStorage.setItem('darkMode', '1');
            darkModeToggle.textContent = '‚òÄÔ∏è';
            darkModeToggle.title = '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –¥–Ω–µ–≤–Ω–æ–π —Ä–µ–∂–∏–º';
        } else {
            document.body.classList.remove('dark-mode');
            localStorage.setItem('darkMode', '0');
            darkModeToggle.textContent = 'üåô';
            darkModeToggle.title = '–ü–µ—Ä–µ–∫–ª—é—á–∏—Ç—å –Ω–æ—á–Ω–æ–π —Ä–µ–∂–∏–º';
        }
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:', e);
    }
}
darkModeToggle && darkModeToggle.addEventListener('click', () => {
    setDarkMode(!document.body.classList.contains('dark-mode'));
});
// –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–µ–∂–∏–º –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
try {
    if (localStorage.getItem('darkMode') === '1') setDarkMode(true);
} catch(e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –Ω–æ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:', e);
}

// --- –°–ª–æ–∂–Ω–∞—è –ø–∞—Å—Ö–∞–ª–∫–∞: 13 –±—ã—Å—Ç—Ä—ã—Ö –∫–ª–∏–∫–æ–≤ –ø–æ –Ω–æ—á–Ω–æ–º—É —Ä–µ–∂–∏–º—É ---
let darkModeSecretClicks = 0;
let darkModeSecretTimer = null;
if (darkModeToggle) {
    darkModeToggle.addEventListener('click', () => {
        darkModeSecretClicks++;
        if (darkModeSecretTimer) clearTimeout(darkModeSecretTimer);
        darkModeSecretTimer = setTimeout(() => { darkModeSecretClicks = 0; }, 10000);
        if (darkModeSecretClicks === 13) {
            darkModeSecretClicks = 0;
            showModal('üëæ –¢—ã –Ω–∞—à—ë–ª —Å—É–ø–µ—Ä—Å–µ–∫—Ä–µ—Ç–Ω—É—é –ø–∞—Å—Ö–∞–ª–∫—É! –†–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–π—Ç–∞: TG: @kosmosega üöÄ');
            for (let i = 0; i < 30; i++) setTimeout(createFallingPetal, i * 60);
            setTimeout(() => showMatrixRain(6000), 800);
        }
    });
}

// --- –ê–Ω–∏–º–∞—Ü–∏—è –ø–∞–¥–∞—é—â–∏—Ö –ª–µ–ø–µ—Å—Ç–∫–æ–≤/—Å–µ—Ä–¥–µ—á–µ–∫ ---
function createFallingPetal() {
    const petal = document.createElement('div');
    petal.className = 'falling-petal';
    petal.textContent = Math.random() < 0.5 ? 'üíñ' : 'üå∏';
    petal.style.position = 'fixed';
    petal.style.left = Math.random() * 100 + 'vw';
    petal.style.top = '-40px';
    petal.style.fontSize = (Math.random() * 18 + 18) + 'px';
    petal.style.opacity = Math.random() * 0.5 + 0.5;
    petal.style.pointerEvents = 'none';
    petal.style.zIndex = '1';
    petal.style.transition = 'transform 6s linear, opacity 6s linear';
    document.body.appendChild(petal);
    setTimeout(() => {
        petal.style.transform = `translateY(${window.innerHeight + 60}px) rotate(${Math.random()*360}deg)`;
        petal.style.opacity = '0';
    }, 100);
    setTimeout(() => {
        if (petal.parentNode) petal.parentNode.removeChild(petal);
    }, 6000);
}
setInterval(createFallingPetal, 1200); 

// --- –ö–Ω–æ–ø–∫–∏ '–ü–æ–¥–µ–ª–∏—Ç—å—Å—è' ---
function getShareUrl() {
    return window.location.origin + window.location.pathname;
}
document.getElementById('share-vk')?.addEventListener('click', function(e) {
    e.preventDefault();
    const url = encodeURIComponent(getShareUrl());
    const title = encodeURIComponent('–§–∞–Ω-—Å–∞–π—Ç –ö—É–¥—Ä—è—à–∫–∏ Z!');
    window.open(`https://vk.com/share.php?url=${url}&title=${title}`,'_blank','width=600,height=400');
});
document.getElementById('share-tg')?.addEventListener('click', function(e) {
    e.preventDefault();
    const url = encodeURIComponent(getShareUrl());
    const text = encodeURIComponent('–§–∞–Ω-—Å–∞–π—Ç –ö—É–¥—Ä—è—à–∫–∏ Z!');
    window.open(`https://t.me/share/url?url=${url}&text=${text}`,'_blank','width=600,height=400');
});
document.getElementById('share-ig')?.addEventListener('click', function(e) {
    e.preventDefault();
    showModal('üì± –î–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ Instagram —Å–∫–æ–ø–∏—Ä—É–π —Å—Å—ã–ª–∫—É –∏ –æ–ø—É–±–ª–∏–∫—É–π –≤—Ä—É—á–Ω—É—é! üíñ');
    // –ö–æ–ø–∏—Ä—É–µ–º —Å—Å—ã–ª–∫—É –≤ –±—É—Ñ–µ—Ä –æ–±–º–µ–Ω–∞
    navigator.clipboard?.writeText(getShareUrl()).then(() => {
        showModal('üîó –°—Å—ã–ª–∫–∞ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∞! –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—à—å –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –µ—ë –≤ Instagram! üíñ');
    }).catch(() => {
        showModal('üìã –°—Å—ã–ª–∫–∞ –Ω–∞ —Å–∞–π—Ç: ' + getShareUrl());
    });
}); 

// --- –ü—Ä–∞–∑–¥–Ω–∏—á–Ω–∞—è —Ç–µ–º–∞ –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è ---
function showBirthdayBanner() {
    if (document.getElementById('birthday-banner')) return;
    const banner = document.createElement('div');
    banner.id = 'birthday-banner';
    banner.innerHTML = 'üéâ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ö—É–¥—Ä—è—à–∫–∏ Z! –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! üéâ';
    banner.className = 'birthday-banner';
    document.body.prepend(banner);
    setTimeout(() => { banner.classList.add('show'); }, 100);
    setTimeout(() => { banner.classList.remove('show'); banner.remove(); }, 15000);
}
function isBirthdayToday() {
    const now = new Date();
    return now.getDate() === 25 && now.getMonth() === 10;
}
if (isBirthdayToday()) {
    setTimeout(showBirthdayBanner, 1200);
    setTimeout(() => {
        showModal('üéÇ –°–µ–≥–æ–¥–Ω—è –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ö—É–¥—Ä—è—à–∫–∏ Z! –ü—É—Å—Ç—å —ç—Ç–æ—Ç –¥–µ–Ω—å –±—É–¥–µ—Ç –≤–æ–ª—à–µ–±–Ω—ã–º! üéÇ');
        for (let i = 0; i < 40; i++) setTimeout(createFallingPetal, i * 60);
    }, 2000);
} 

// --- –≠—Ñ—Ñ–µ–∫—Ç –º–∞—Ç—Ä–∏—Ü—ã (–¥–æ–∂–¥—å –∏–∑ –∑–µ–ª—ë–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤) ---
function showMatrixRain(duration = 5000) {
    if (document.getElementById('matrix-canvas')) return;
    const canvas = document.createElement('canvas');
    canvas.id = 'matrix-canvas';
    canvas.style.position = 'fixed';
    canvas.style.left = '0';
    canvas.style.top = '0';
    canvas.style.width = '100vw';
    canvas.style.height = '100vh';
    canvas.style.pointerEvents = 'none';
    canvas.style.zIndex = '9999';
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
    document.body.appendChild(canvas);
    const ctx = canvas.getContext('2d');
    const letters = '–ê–ë–í–ì–î–ï–ñ–ó–ò–ö–õ–ú–ù–û–ü–†–°–¢–£–§–•–¶–ß–®–©–´–≠–Æ–ØABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789'.split('');
    const fontSize = 22;
    const columns = Math.floor(canvas.width / fontSize);
    const drops = Array(columns).fill(1);
    let running = true;
    function draw() {
        ctx.fillStyle = 'rgba(0, 0, 0, 0.18)';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.font = fontSize + 'px monospace';
        ctx.fillStyle = '#00ff55';
        for (let i = 0; i < drops.length; i++) {
            const text = letters[Math.floor(Math.random() * letters.length)];
            ctx.fillText(text, i * fontSize, drops[i] * fontSize);
            if (Math.random() > 0.975) drops[i] = 0;
            drops[i]++;
        }
        if (running) requestAnimationFrame(draw);
    }
    draw();
    setTimeout(() => {
        running = false;
        canvas.remove();
    }, duration);
} 

// --- –°–∏—Å—Ç–µ–º–∞ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ---
const ACHIEVEMENTS = [
  { key: 'first-compliment', emoji: 'üíå', title: '–ü–µ—Ä–≤—ã–π —à–∞–≥ –∫ –∑–≤–µ–∑–¥–µ', desc: '–û—Å—Ç–∞–≤—å —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç –Ω–∞ —Å—Ç–µ–Ω–µ –ª—é–±–≤–∏.' },
  { key: 'all-easter-eggs', emoji: 'üïµÔ∏è‚Äç‚ôÇÔ∏è', title: '–û—Ö–æ—Ç–Ω–∏–∫ –∑–∞ —Ç–∞–π–Ω–∞–º–∏', desc: '–ù–∞–π–¥–∏ –≤—Å–µ –ø–∞—Å—Ö–∞–ª–∫–∏ –Ω–∞ —Å–∞–π—Ç–µ.' },
  { key: 'night-mode', emoji: 'üåô', title: '–õ—É–Ω–Ω—ã–π —Ñ–∞–Ω–∞—Ç', desc: '–í–∫–ª—é—á–∏ –Ω–æ—á–Ω–æ–π —Ä–µ–∂–∏–º —Ö–æ—Ç—è –±—ã –æ–¥–∏–Ω —Ä–∞–∑.' },
  { key: 'birthday', emoji: 'üéÇ', title: '–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π –≤–∏–∑–∏—Ç', desc: '–ó–∞–π–¥–∏ –Ω–∞ —Å–∞–π—Ç –≤ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ö—É–¥—Ä—è—à–∫–∏ Z.' },
  { key: 'gallery-expert', emoji: 'üñºÔ∏è', title: '–ì–∞–ª–µ—Ä–µ–π–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç', desc: '–ü–æ—Å–º–æ—Ç—Ä–∏ –∫–∞–∂–¥–æ–µ —Ñ–æ—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –≥–∞–ª–µ—Ä–µ–∏.' },
  { key: 'superlike', emoji: 'üíñ', title: '–°—É–ø–µ—Ä–ª–∞–π–∫', desc: '–°–¥–µ–ª–∞–π –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏.' },
  { key: 'legend', emoji: 'üèÜ', title: '–õ–µ–≥–µ–Ω–¥–∞ —Ñ–∞–Ω-–∫–ª—É–±–∞', desc: '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –æ—Å—Ç–∞–ª—å–Ω—ã–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è.' },
  { key: 'dev-easter-egg', emoji: 'üß©', title: '–°–µ–∫—Ä–µ—Ç–Ω—ã–π –∫–æ–¥', desc: '–ù–∞–π–¥–∏ –ø–∞—Å—Ö–∞–ª–∫—É —Å –Ω–∏–∫–æ–º —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞.' },
  { key: 'rainbow', emoji: 'ü¶Ñ', title: '–†–∞–¥—É–∂–Ω—ã–π –º–æ–º–µ–Ω—Ç', desc: '–ê–∫—Ç–∏–≤–∏—Ä—É–π –∫–Ω–æ–ø–∫—É ‚Äú–°–¥–µ–ª–∞—Ç—å –¥–µ–Ω—å —è—Ä—á–µ‚Äù.' },
  { key: 'party', emoji: 'üéâ', title: '–í–µ—á–µ—Ä–∏–Ω–∫–∞ —ç–º–æ—Ü–∏–π', desc: '–ü–æ–ª—É—á–∏—Ç—å 5 –ª–∞–π–∫–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–µ.' }
];
function getAchievements() {
  try { 
    const saved = localStorage.getItem('achievements');
    return saved ? JSON.parse(saved) : {}; 
  } catch(e){ 
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è:', e);
    return {}; 
  }
}
function setAchievement(key) {
  try {
    const ach = getAchievements();
    if (!ach[key]) {
      ach[key] = Date.now();
      localStorage.setItem('achievements', JSON.stringify(ach));
      showAchievementToast(key);
      renderAchievementsModal();
      // –õ–µ–≥–µ–Ω–¥–∞ —Ñ–∞–Ω-–∫–ª—É–±–∞ (–µ—Å–ª–∏ –≤—Å–µ –∫—Ä–æ–º–µ legend)
      if (key !== 'legend' && ACHIEVEMENTS.filter(a => a.key !== 'legend').every(a => ach[a.key])) {
        setAchievement('legend');
      }
    }
  } catch(e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ:', e);
  }
}
function hasAchievement(key) {
  return !!getAchievements()[key];
}
// --- –í—Å–ø–ª—ã–≤–∞—é—â–µ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ ---
function showAchievementToast(key) {
  const a = ACHIEVEMENTS.find(a => a.key === key);
  if (!a) return;
  let toast = document.createElement('div');
  toast.className = 'achievement-toast';
  toast.innerHTML = `<span class='achievement-emoji'>${a.emoji}</span> <b>${a.title}</b><br><span class='achievement-desc'>${a.desc}</span>`;
  document.body.appendChild(toast);
  setTimeout(() => { toast.classList.add('show'); }, 100);
  setTimeout(() => { toast.classList.remove('show'); toast.remove(); }, 5000);
}
// --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ---
const achievementsToggle = document.getElementById('achievements-toggle');
const achievementsModal = document.getElementById('achievements-modal');
const achievementsModalClose = document.getElementById('achievements-modal-close');
const achievementsList = document.getElementById('achievements-list');
achievementsToggle && achievementsToggle.addEventListener('click', () => {
  achievementsModal.classList.add('open');
  renderAchievementsModal();
});
achievementsModalClose && achievementsModalClose.addEventListener('click', () => achievementsModal.classList.remove('open'));
achievementsModal && achievementsModal.addEventListener('click', (e) => {
  if (e.target === achievementsModal) achievementsModal.classList.remove('open');
});
document.addEventListener('keydown', (e) => {
  if (e.key === 'Escape' && achievementsModal.classList.contains('open')) achievementsModal.classList.remove('open');
});
function renderAchievementsModal() {
  const ach = getAchievements();
  achievementsList.innerHTML = '';
  ACHIEVEMENTS.forEach(a => {
    const item = document.createElement('div');
    item.className = 'achievement-item' + (ach[a.key] ? ' achieved' : '');
    item.innerHTML = `<span class='achievement-emoji'>${a.emoji}</span><div><div class='achievement-title'>${a.title}</div><div class='achievement-desc'>${a.desc}</div></div>`;
    achievementsList.appendChild(item);
  });
}
// --- –°—Ç–∏–ª–∏ –¥–ª—è —Ç–æ—Å—Ç–∞ ---
const style = document.createElement('style');
style.innerHTML = `.achievement-toast {position:fixed;top:30px;left:50%;transform:translateX(-50%) scale(0.8);background:linear-gradient(90deg,#fff176,#ff6b9d);color:#764ba2;font-size:1.1rem;font-family:'Montserrat',sans-serif;padding:18px 36px;border-radius:18px;box-shadow:0 4px 24px #ff6b9d55;z-index:7000;opacity:0;transition:opacity .5s,transform .5s;text-align:center;pointer-events:none;}.achievement-toast.show{opacity:1;transform:translateX(-50%) scale(1.08);}`;
document.head.appendChild(style); 

// --- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤—ã–¥–∞—á–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π ---
// 1. –ü–µ—Ä–≤—ã–π –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç
const origAddUserComplimentForAch = addUserCompliment;
addUserCompliment = function() {
    const before = getAchievements();
    try { origAddUserComplimentForAch(); } catch(e) { return; }
    if (!before['first-compliment']) setAchievement('first-compliment');
};
// 2. –ü–∞—Å—Ö–∞–ª–∫–∞ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–∫–µ (7 –∫–ª–∏–∫–æ–≤)
let mainPhotoEasterEggFound = false;
if (mainPhoto) {
    mainPhoto.addEventListener('click', (e) => {
        if (mainPhotoClickCount === 7 && !mainPhotoEasterEggFound) {
            mainPhotoEasterEggFound = true;
            setAchievement('all-easter-eggs');
        }
    });
}
// 3. –ü–∞—Å—Ö–∞–ª–∫–∞ —Å —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–æ–º
let devEasterEggFound = false;
if (darkModeToggle) {
    darkModeToggle.addEventListener('click', () => {
        if (darkModeSecretClicks === 13 && !devEasterEggFound) {
            devEasterEggFound = true;
            setAchievement('dev-easter-egg');
        }
    });
}
// 4. –ù–æ—á–Ω–æ–π —Ä–µ–∂–∏–º
if (darkModeToggle) {
    darkModeToggle.addEventListener('click', () => {
        if (document.body.classList.contains('dark-mode')) setAchievement('night-mode');
    });
}
// 5. –ü—Ä–æ—Å–º–æ—Ç—Ä –≤—Å–µ—Ö —Ñ–æ—Ç–æ –≤ –º–æ–¥–∞–ª—å–Ω–æ–º –æ–∫–Ω–µ –≥–∞–ª–µ—Ä–µ–∏
let galleryViewed = new Set();
try {
    const saved = localStorage.getItem('galleryViewed');
    if (saved) {
        galleryViewed = new Set(JSON.parse(saved));
    }
} catch(e) {
    console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ:', e);
}
function markGalleryViewed(idx) {
    try {
        galleryViewed.add(idx);
        localStorage.setItem('galleryViewed', JSON.stringify(Array.from(galleryViewed)));
        if (galleryViewed.size === galleryPhotos.length) setAchievement('gallery-expert');
    } catch(e) {
        console.warn('–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã–µ —Ñ–æ—Ç–æ:', e);
    }
}
if (galleryPhotos.length) {
    galleryPhotos.forEach((img, idx) => {
        img.addEventListener('click', () => markGalleryViewed(idx));
    });
}
// 6. –°—É–ø–µ—Ä–ª–∞–π–∫ (–¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫ –ø–æ –≥–ª–∞–≤–Ω–æ–π —Ñ–æ—Ç–∫–µ)
if (mainPhoto) {
    mainPhoto.addEventListener('dblclick', () => setAchievement('superlike'));
}
// 7. –î–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
if (isBirthdayToday()) setAchievement('birthday');
// 8. –Ø—Ä–∫–∏–π –¥–µ–Ω—å (–∫–Ω–æ–ø–∫–∞ brighten-btn)
document.addEventListener('DOMContentLoaded', () => {
    const brightenBtn = document.getElementById('brighten-btn');
    if (brightenBtn) {
        brightenBtn.addEventListener('click', () => setAchievement('rainbow'));
    }
});
// 9. 5 –ª–∞–π–∫–æ–≤ –Ω–∞ –æ–¥–Ω–æ–º –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–µ (—Å–¥–µ–ª–∞–ª–∏ –±–æ–ª–µ–µ –¥–æ—Å—Ç–∏–∂–∏–º—ã–º)
function checkPartyAchievement() {
    compliments.forEach(c => {
        if (c.likes && c.likes >= 5) setAchievement('party');
    });
}
setInterval(checkPartyAchievement, 3000); 